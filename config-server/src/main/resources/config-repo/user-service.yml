spring:
  rabbitmq:
    host: localhost
    port: 5672

  datasource:
    url: jdbc:postgresql://localhost:5432/demospring_db
    username: admin
    password: admin
    driver-class-name: org.postgresql.Driver

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update

  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: fast-payment
            client-secret: 3dUyOoZlIakzZiZ3QqPyIA73dcFC3Z5D
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope: openid,profile,email
        provider:
          keycloak:
            issuer-uri: http://localhost:9065/realms/fast-payment
            user-info-uri: http://localhost:9065/realms/fast-payment/protocol/openid-connect/userinfo
            token-uri: http://localhost:9065/realms/fast-payment/protocol/openid-connect/token
            authorization-uri: http://localhost:9065/realms/fast-payment/protocol/openid-connect/auth
      resourceserver:
        jwt:
          issuer-uri: http://localhost:9065/auth/realms/fast-payment
          jwk-set-uri: http://localhost:9065/auth/realms/fast-payment/protocol/openid-connect/certs
logging:
  level:
    org:
      springframework:
        security: DEBUG

keycloak:
  realm: fast-payment
  auth-server-url: http://localhost:9065
  resource: fast-payment
  credentials:
    secret: 3dUyOoZlIakzZiZ3QqPyIA73dcFC3Z5D
  public-client: true
  use-resource-role-mappings: true

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/

management:
  tracing:
    sampling:
      probability: 1.0
  endpoints:
    web:
      exposure:
        include: prometheus
  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
