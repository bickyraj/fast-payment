services:
  api-gateway-service:
    image: bickyrajkayastha/fast-payment-api-gateway:latest
    container_name: api-gateway-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "3030:3030"
    depends_on:
      - eureka
      - keycloak
    networks:
      - app-network
  user-service:
    image: bickyrajkayastha/fast-payment-user-service:latest
    container_name: user-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "7024:7024"
    depends_on:
      - config-server
      - eureka
      - keycloak
      - postgres
    networks:
      - app-network
  product-service:
    image: bickyrajkayastha/fast-payment-product-service:latest
    container_name: product-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "7071:7071"
    depends_on:
      - config-server
      - eureka
      - keycloak
      - postgres
      - minio
      - elasticsearch
    networks:
      - app-network
  order-service:
    image: bickyrajkayastha/fast-payment-order-service:latest
    container_name: order-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "7072:7072"
    depends_on:
      - config-server
      - eureka
      - keycloak
      - postgres
      - minio
      - elasticsearch
    networks:
      - app-network
  order-payment-service:
    build:
      context: ./order-payment-service
    container_name: order-payment-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "7074:7074"
    depends_on:
      - config-server
      - eureka
      - keycloak
      - postgres
      - minio
      - elasticsearch
    networks:
      - app-network
  report-service:
    build:
      context: ./report-service
    container_name: report-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "7026:7026"
    depends_on:
      - config-server
      - eureka
      - keycloak
      - postgres
      - minio
      - elasticsearch
      - kafka-2
      - mongodb
    networks:
      - app-network
  payment-service:
    build:
      context: ./payment-service
    container_name: payment-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "7073:7073"
    depends_on:
      - config-server
      - eureka
      - keycloak
      - postgres
      - minio
      - elasticsearch
      - kafka-2
    networks:
      - app-network
  eureka:
    image: bickyrajkayastha/fast-payment-service-registry:latest
    container_name: eureka
    ports:
      - "8761:8761"
    networks:
      - app-network
  config-server:
    image: bickyrajkayastha/fast-payment-config-server:latest
    container_name: config-server
    ports:
      - "8888:8888"
    networks:
      - app-network
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_DB: demospring_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
  mongodb:
    image: mongo:5
    container_name: mongo-db
    environment:
      MONGO_INITDB_DATABASE: reporting_db
    volumes:
      - mongo_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - app-network
  zookeeper-2:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 32181:2181
    networks:
      - app-network
  kafka-2:
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper-2
    ports:
      - 39092:39092
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-2:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9092,PLAINTEXT_HOST://localhost:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app-network
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    networks:
      - app-network
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "5720:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana.ini:/etc/grafana/grafana.ini

    networks:
      - app-network
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"     # AMQP port
      - "15672:15672"   # Management UI port
    networks:
      - app-network
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HTTP_PORT: 9065
    ports:
      - "9065:9065"
    command: [ "start-dev" ]
    networks:
      - app-network
    volumes:
      - keycloak_data:/opt/jboss/keycloak/standalone/data
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.16.0
    container_name: elasticsearch
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node  # Use single-node discovery
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - app-network
    volumes:
      - esdata:/usr/share/elasticsearch/data
  kibana:
    image: docker.elastic.co/kibana/kibana:8.0.0
    container_name: kibana
    environment:
      ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
    ports:
      - "5601:5601"
    networks:
      - app-network
  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9082:9082"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: fastpaymentadmin
    volumes:
      - minio-data:/data
      - minio-config:/root/.minio
    command: server /data --console-address ":9082"
    networks:
      - app-network
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - app-network
networks:
  app-network:
    driver: bridge
volumes:
  keycloak_data:
  postgres-data:
  grafana-storage:
  esdata:
  mongo_data:
  minio-data:
    driver: local
  minio-config:
    driver: local
